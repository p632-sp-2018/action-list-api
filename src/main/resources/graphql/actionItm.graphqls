
scalar Date

type Query {
	findAllActionItems (filter: ActionItemFilter) : [ActionItem]
	findActionItem(id: String!, filter: ActionItemFilter):ActionItem!
	pageActionItems(offset: Int!, limit: Int!, filter: ActionItemFilter):[ActionItem]
}

input ActionItemFilter {
	documentTypeLabel: String
	routeStatusLabel: String
	requestLabel: String
}

type Document{
	id: ID
	routeStatusCode: String
	routeStatusLabel: String
	lastApprovedDate: Date
	initiator: Principal
}

type Group{
	id: ID
	name: String
	nameSpace: String
	description: String
	active: String
	lastUpdateDate: Date
	groupUrl: String
}

type Principal{
	universityId: ID!
	networkId: String
	defaultDisplayName: String
	personUrl: String
	active: String
	lastUpdateDate: Date
}

type ActionItem{
	id :ID! 
	documentTypeLabel : String!
	title : String
	document : Document
	documentUrl: String!
	documentTypeName: String!
	requestCode: String!
	requestLabel: String!
	routeLogUrl: String!
	group: Group
	requestedOf: Principal
	creationDate : Date!	
}